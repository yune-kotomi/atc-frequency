/* Generated by Opal 0.5.5 */
(function($opal) {
  var self = $opal.top, $scope = $opal, nil = $opal.nil, $breaker = $opal.breaker, $slice = $opal.slice, $module = $opal.module;
  $opal.add_stubs(['$raise']);
  return (function($base) {
    var self = $module($base, 'Math');

    var def = self._proto, $scope = self._scope;
    $opal.cdecl($scope, 'E', Math.E);

    $opal.cdecl($scope, 'PI', Math.PI);

    $opal.defs(self, '$acos', function(x) {
      var self = this;
      return Math.acos(x);
    });

    $opal.defs(self, '$acosh', function(x) {
      var self = this;
      return Math.acosh(x);
    });

    $opal.defs(self, '$asin', function(x) {
      var self = this;
      return Math.asin(x);
    });

    $opal.defs(self, '$asinh', function(x) {
      var self = this;
      return Math.asinh(x);
    });

    $opal.defs(self, '$atan', function(x) {
      var self = this;
      return Math.atan(x);
    });

    $opal.defs(self, '$atan2', function(x, y) {
      var self = this;
      return Math.atan2(x, y);
    });

    $opal.defs(self, '$atanh', function(x) {
      var self = this;
      return Math.atanh(x);
    });

    $opal.defs(self, '$cbrt', function(x) {
      var self = this;
      return Math.cbrt(x);
    });

    $opal.defs(self, '$cos', function(x) {
      var self = this;
      return Math.cos(x);
    });

    $opal.defs(self, '$cosh', function(x) {
      var self = this;
      return Math.cosh(x);
    });

    $opal.defs(self, '$erf', function(x) {
      var self = this;
      return self.$raise($scope.NotImplementedError);
    });

    $opal.defs(self, '$erfc', function(x) {
      var self = this;
      return self.$raise($scope.NotImplementedError);
    });

    $opal.defs(self, '$exp', function(x) {
      var self = this;
      return Math.exp(x);
    });

    $opal.defs(self, '$frexp', function(x) {
      var self = this;
      return self.$raise($scope.NotImplementedError);
    });

    $opal.defs(self, '$gamma', function(x) {
      var self = this;
      return self.$raise($scope.NotImplementedError);
    });

    $opal.defs(self, '$hypot', function(x, y) {
      var self = this;
      return Math.hypot(x, y);
    });

    $opal.defs(self, '$ldexp', function(flt, int) {
      var self = this;
      return self.$raise($scope.NotImplementedError);
    });

    $opal.defs(self, '$lgamma', function(x) {
      var self = this;
      return self.$raise($scope.NotImplementedError);
    });

    $opal.defs(self, '$log', function(num, base) {
      var $a, self = this;
      if (($a = base !== undefined) !== false && $a !== nil) {
        self.$raise($scope.NotImplementedError)};
      return Math.log(num);
    });

    $opal.defs(self, '$log10', function(num) {
      var self = this;
      return Math.log10(num);
    });

    $opal.defs(self, '$log2', function(num) {
      var self = this;
      return Math.log2(num);
    });

    $opal.defs(self, '$sin', function(x) {
      var self = this;
      return Math.sin(x);
    });

    $opal.defs(self, '$sinh', function(x) {
      var self = this;
      return Math.sinh(x);
    });

    $opal.defs(self, '$sqrt', function(x) {
      var self = this;
      return Math.sqrt(x);
    });

    $opal.defs(self, '$tan', function(x) {
      var self = this;
      return Math.tan(x);
    });

    $opal.defs(self, '$tanh', function(x) {
      var self = this;
      return Math.tanh(x);
    });
    
  })(self)
})(Opal);
